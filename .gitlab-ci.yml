image: node:12

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - docs/node_modules/
    - packages/core/node_modules/
    - packages/react/node_modules/

stages:
  - prepare
  - codequality
  - build
  # - test
  - deploy


# ANCHORS - reusable sections of YAML

.docs-aws:
  before_script: &docs-aws
    - apt-get update -qq
    - apt-get install -qq python-pip
    - pip install awscli
    - npm run build:docs


# JOBS

install:
  stage: prepare
  script:
    - npm install
    - npm run bootstrap

eslint:
  stage: codequality
  script:
    - npm run lint:es

stylelint:
  stage: codequality
  script:
    - npm run lint:style

prettier:
  stage: codequality
  script:
    - npm run lint:prettier

test:
  stage: codequality
  script:
    - npm run coverage

build:
  stage: build
  script:
    - npm run build
  artifacts:
    paths:
      - packages/*/dist
    expire_in: 30 days

pages:
  stage: deploy
  environment:
    name: docs
    url: $CI_PAGES_URL
  variables:
    PATH_PREFIX: /platform/$CI_PROJECT_NAME/
  script:
    - npm run build:docs
  after_script:
    - mv docs/public public
  artifacts:
    paths:
      - public
  only:
    - master

deploy:review:
  stage: deploy
  variables:
    PATH_PREFIX: /${CI_COMMIT_REF_SLUG}/
    S3_BUCKET: norton-design-system-review
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    url: http://${S3_BUCKET}.s3-website.${AWS_DEFAULT_REGION}.amazonaws.com/${CI_COMMIT_REF_SLUG}
    on_stop: clean:review
  before_script: *docs-aws
  script:
    - aws s3 cp public s3://${S3_BUCKET}/${CI_COMMIT_REF_SLUG} --recursive
  only:
    - master
    - merge_requests

clean:review:
  image: python
  variables:
    S3_BUCKET: norton-design-system-review
  before_script:
    - pip install awscli
  script:
    - aws s3 rm s3://${S3_BUCKET}/${CI_COMMIT_REF_SLUG} --recursive
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    action: stop
  when: manual

# deploy:production:
#   stage: deploy
#   variables:
#     PATH_PREFIX: /${CI_COMMIT_TAG}/
#     S3_BUCKET: norton-design-system-production
#   environment:
#     name: tags/${CI_COMMIT_TAG}
#     url: https://d2tarzv1ymldad.cloudfront.net/${CI_COMMIT_TAG}
#   before_script: *docs-aws
#   script:
#     - npm run deploy:docs
#   after_script:
#     # invalidate the cloudfront cache to force a refresh
#     - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"
#   artifacts:
#     paths:
#       - docs/public
#   only:
#     - tags

.publish:
  stage: deploy
  script:
    - npm run publish
  only:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == master
      - $CI_MERGE_REQUEST_LABELS =~ /release/
