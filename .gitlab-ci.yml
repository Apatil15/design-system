image: node:lts

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules
    - "*/node_modules"
    - packages/*/node_modules

stages:
  - prepare
  - codequality
  - build
  - deploy

# ANCHORS - reusable sections of YAML

.build-docs: &build-docs
  before_script:
    - npm run build:sassdoc -- --dest docs/static/sassdoc
    - npm run build:stories -- -- --output-dir ../../docs/static/storybook
  script:
    - npm run build:docs
    - mv docs/public public

# JOBS

install:
  stage: prepare
  # don't use npm ci since we are using cached node_modules
  script:
    - npm install
    - npm run bootstrap -- --no-ci

eslint:
  stage: codequality
  script:
    - npm run lint:es

stylelint:
  stage: codequality
  script:
    - npm run lint:style

prettier:
  stage: codequality
  script:
    - npm run lint:prettier

test:
  stage: codequality
  script:
    - npm run coverage

lib:
  stage: build
  script:
    - npm run build
  artifacts:
    paths:
      - packages/*/dist
    expire_in: 30 days

docs:review:
  stage: build
  variables:
    PATH_PREFIX: /${CI_COMMIT_REF_SLUG}/
  <<: *build-docs
  artifacts:
    paths:
      - public
  only:
    - branches
  except:
    - main

docs:prod:
  stage: build
  <<: *build-docs
  artifacts:
    paths:
      - public
  only:
    - main

pages:
  stage: deploy
  environment:
    name: pages
    url: $CI_PAGES_URL
  variables:
    PATH_PREFIX: /platform/$CI_PROJECT_NAME/
  <<: *build-docs
  artifacts:
    paths:
      - public
  only:
    - main

review:
  image: python
  stage: deploy
  dependencies:
    - docs:review
  variables:
    S3_BUCKET: norton-design-system-review
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://${S3_BUCKET}.s3-website.${AWS_DEFAULT_REGION}.amazonaws.com/${CI_COMMIT_REF_SLUG}
    on_stop: clean-review
  before_script:
    - pip install awscli
  script:
    - aws s3 sync public s3://${S3_BUCKET}/${CI_COMMIT_REF_SLUG} --delete
  only:
    - branches
  except:
    - main
    - tags

clean-review:
  image: python
  stage: deploy
  variables:
    GIT_STRATEGY: none
    S3_BUCKET: norton-design-system-review
  before_script:
    - pip install awscli
  script:
    - aws s3 rm s3://${S3_BUCKET}/${CI_COMMIT_REF_SLUG} --recursive
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  when: manual

prod:
  image: python
  stage: deploy
  dependencies:
    - docs:prod
  variables:
    S3_BUCKET: norton-design-system-production
  environment:
    name: production
    url: https://d2tarzv1ymldad.cloudfront.net
  before_script:
    - pip install awscli
  script:
    - aws s3 sync public s3://${S3_BUCKET}/ --delete
  after_script:
    # invalidate the cloudfront cache to force a refresh
    - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"
  only:
    - main

.publish:
  stage: deploy
  script:
    - npm run publish
  only:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == main
      - $CI_MERGE_REQUEST_LABELS =~ /release/
