{"version":3,"sources":["webpack:///./site/components/link.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"kQAMO,MAAMA,EAAe,Q,0MAE5B,MAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,QADR,QAGA,8BACE,iBAAGC,WAAW,cAAd,uDAEF,iBAAQ,CACN,GAAM,WADR,WAGA,yCACA,sBACE,kBAAIA,WAAW,MAAf,gBACA,kBAAIA,WAAW,MAAf,sBAEF,iBAAQ,CACN,GAAM,SADR,SAGA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,wFAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,+EAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,qGAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,yCAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,YAAgC,6BAAGA,WAAW,KAAQ,CAClD,KAAQ,0EADoB,QAAhC,gDAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,iBAAnB,sFAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,uBACA,kBAAIA,WAAW,MACb,kBAAIA,WAAW,MAAf,yFACA,kBAAIA,WAAW,MAAf,qFACA,kBAAIA,WAAW,MAAf,sGACA,kBAAIA,WAAW,MAAf,sEAGJ,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,+GAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,iBAAnB,2MAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gIAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,oFAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,uEAGJ,mDACA,sBACE,kBAAIA,WAAW,MAAf,+CAAoE,kBAAIA,WAAW,MAAf,6CAApE,aACA,kBAAIA,WAAW,MAAf,4DACA,kBAAIA,WAAW,MAAf,0E,wMAMNJ,EAAWK,gBAAiB","file":"component---site-components-link-mdx-721d95115101cff25e76.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/design-system/design-system/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"link\"\n    }}>{`Link`}</h1>\n    <blockquote>\n      <p parentName=\"blockquote\">{`A link allows a user to navigate to another place.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"anatomy\"\n    }}>{`Anatomy`}</h2>\n    <p>{`A link includes:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Text Content`}</li>\n      <li parentName=\"ol\">{`A Destination/URL`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`A link navigates the user to another place on the same page or to a different page.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`A link helps define the structure, architecture and hierarchy of the site.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`A link allows the user to return to the previous location by pressing the browser's back button.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Activating the link changes the URL.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`A link's `}<a parentName=\"p\" {...{\n            \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-href\"\n          }}>{`href`}</a>{` value must be a valid URL or URL fragment.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`Accessibility`}</inlineCode>{` Only Enter (keydown) activates the link. Links always move focus when activated.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Do use a link when…`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`It would be useful to \"Copy\", \"Open in a new tab\", or \"Bookmark\" the destination URL.`}</li>\n          <li parentName=\"ul\">{`The text content is embedded in a sentence, and does not need margins or padding.`}</li>\n          <li parentName=\"ul\">{`The text content conveys location, not an action (for example: a link that references a resource).`}</li>\n          <li parentName=\"ul\">{`You want to record the navigation in the user's browser history.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Do style links so that they are visually different from plain text, and indicate that they can be clicked.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`Accessibility`}</inlineCode>{` Don't create links that look like buttons. If dictation software users say \"show buttons\", the actions will not be listed. Keyboard users may try to press Space to activate, which will do nothing.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Don’t use an ambiguous label like “click here”. The link’s text content should clearly describe its destination or purpose.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Don’t include the full stop if a link is at the end of a sentence or paragraph.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Don’t use Javascript to simulate links. Use a valid href instead.`}</p>\n      </li>\n    </ul>\n    <p>{`Consider using Buttons if…`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The component is styled like a button. (See `}<em parentName=\"li\">{`Don't create links that look like buttons`}</em>{`, above).`}</li>\n      <li parentName=\"ul\">{`The label communicates an action that the user can take.`}</li>\n      <li parentName=\"ul\">{`If the action taken will change or manipulate data on the page.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}