{"version":3,"sources":["webpack:///./site/components/button.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Button","variant","isMDXComponent"],"mappings":"yRAQO,MAAMA,EAAe,Q,4MAE5B,MAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,UADR,UAGA,8BACE,iBAAGC,WAAW,cAAd,iDAEF,iBAAQ,CACN,GAAM,WADR,WAGA,mDACA,sBACE,kBAAIA,WAAW,MAAf,gBACA,kBAAIA,WAAW,MAAf,YAEF,qDACA,sBACE,kBAAIA,WAAW,MAAf,gBACA,kBAAIA,WAAW,MAAf,WACA,kBAAIA,WAAW,MAAf,wCAEF,mDACA,sBACE,kBAAIA,WAAW,MAAf,WACA,kBAAIA,WAAW,MAAf,YAEF,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,yCAA4CC,QAAS,CACtFL,QACAH,kBACAS,eACAC,gBACAV,kBACAH,gBACCO,QAAQ,cACd,YAAC,SAAD,CAAQO,QAAQ,QAAQP,QAAQ,UAAhC,UAEG,iBAAQ,CACN,GAAM,SADR,SAGA,sBACE,kBAAIC,WAAW,MACb,iBAAGA,WAAW,MAAd,qFAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,sFAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,iBAAnB,6DAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,mGAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gHAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,qCAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,iFAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,qFAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,iBAAnB,4MAGJ,qHACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,iFAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,oCAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,0FAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,+EAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gGAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,iBAAnB,sFAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,+DAAmF,kBAAIA,WAAW,KAAf,6CAAnF,cAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,wGAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,0KAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,qJ,0MAORJ,EAAWW,gBAAiB","file":"component---site-components-button-mdx-121b47a43dd8f6e611da.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/design-system/design-system/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { Button } from \"@wwnds/react\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <blockquote>\n      <p parentName=\"blockquote\">{`A button allows a user to perform an action.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"anatomy\"\n    }}>{`Anatomy`}</h2>\n    <p>{`Text-Only Buttons include:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`A Text Label`}</li>\n      <li parentName=\"ol\">{`Padding`}</li>\n    </ol>\n    <p>{`Text + Icon Buttons include:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`A Text Label`}</li>\n      <li parentName=\"ol\">{`Padding`}</li>\n      <li parentName=\"ol\">{`An Icon (before or after the label)`}</li>\n    </ol>\n    <p>{`Icon-Only Buttons include:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`An Icon`}</li>\n      <li parentName=\"ol\">{`Padding`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'<Button variant=\\\"solid\\\">Solid</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t<Button variant=\"solid\" mdxType=\"Button\">Solid</Button>\n    </Playground>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`A button is a standalone call-to-action with space or visual emphasis around it.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`A button has a meaningful label that communicates the action that users can take.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`Accessibility`}</inlineCode>{` Space (keyup) and Enter (keydown) activates the button.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Do indicate the most important action on a page or region with a high-emphasis Primary button.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Do indicate less important actions with medium-emphasis Secondary buttons or low-emphasis Tertiary buttons.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Don't wrap text inside a button.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Don't use labels that are too long. A button's label should be very concise.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Don't choose default button colors that could be confused with disabled buttons.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`Accessibility`}</inlineCode>{` Don't create links that look like buttons. If dictation software users say \"show buttons\", the actions will not be listed. Keyboard users may try to press Space to activate, which will do nothing.`}</p>\n      </li>\n    </ul>\n    <p>{`Links are similar to buttons but the two are not interchangeable. Consider using links if...`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`You are navigating to another place on the same page or to a different page.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The action will change the URL.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`It would be useful to \"Copy\", \"Open in a new tab\", or \"Bookmark\" the destination URL.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The label is embedded in a sentence, and does not need margins or padding.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The label conveys location, not an action (for example: a link that references a resource).`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`Accessibility`}</inlineCode>{` Only Enter (keydown) activates the link. Links always move focus when activated.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use a button if the component is styled like a button. (See `}<em parentName=\"p\">{`Don't create links that look like buttons`}</em>{`, above).`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`If a button navigates the user to a new page or section, it might not meet the user's expectations.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`A button will not record the navigation in the user's browser history, so they will not be able to return to the previous location using their browser's back button.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Consider the overall navigation of the site. Links help define the structure, architecture and hierarchy of the site`}{`â€”`}{`buttons don't.`}</p>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}