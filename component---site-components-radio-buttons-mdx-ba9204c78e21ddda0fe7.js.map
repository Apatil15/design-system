{"version":3,"sources":["webpack:///./site/components/radio-buttons.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","RadioGroup","Radio","label","isMDXComponent"],"mappings":"0RAQO,MAAMA,EAAe,Q,mNAE5B,MAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,8BACE,iBAAGC,WAAW,cAAd,gEAEF,iBAAQ,CACN,GAAM,WADR,WAGA,2DACA,sBACE,kBAAIA,WAAW,MAAf,iBACA,kBAAIA,WAAW,MAAf,uDAEF,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,wLAA2LC,QAAS,CACrOL,QACAH,kBACAS,eACAC,wBACAC,cACAX,kBACAH,gBACCO,QAAQ,cACd,YAAC,aAAD,CAAYQ,MAAM,2BAA2BR,QAAQ,cACpD,YAAC,QAAD,CAAOA,QAAQ,SAAf,SACA,YAAC,QAAD,CAAOA,QAAQ,SAAf,UACA,YAAC,QAAD,CAAOA,QAAQ,SAAf,UACA,YAAC,QAAD,CAAOA,QAAQ,SAAf,SACA,YAAC,QAAD,CAAOA,QAAQ,SAAf,UAGE,iBAAQ,CACN,GAAM,SADR,SAGA,sBACE,kBAAIC,WAAW,MACb,iBAAGA,WAAW,MAAd,4HAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,kDACA,kBAAIA,WAAW,MACb,kBAAIA,WAAW,MAAf,0CAA+D,6BAAGA,WAAW,MAAS,CAClF,KAAQ,aADmD,YAA/D,OAE6B,6BAAGA,WAAW,MAAS,CAChD,KAAQ,cADiB,aAF7B,OAOJ,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,0GAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,+KAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,iBAAnB,wHAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,iBAAnB,IAAiF,gCAAjF,qEAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,sFAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,2DAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,8EAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,8GAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,wEAA4F,6BAAGA,WAAW,KAAQ,CAC9G,KAAQ,aADgF,cAA5F,cAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gEAAoF,6BAAGA,WAAW,KAAQ,CACtG,KAAQ,aADwE,cAApF,cAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,0GACA,kBAAIA,WAAW,MACb,kBAAIA,WAAW,MAAf,SAA8B,6BAAGA,WAAW,MAAS,CACjD,KAAQ,WADkB,UAA9B,iEAGA,kBAAIA,WAAW,MAAf,qCAA0D,6BAAGA,WAAW,MAAS,CAC7E,KAAQ,WAD8C,WAA1D,c,iNAUVJ,EAAWY,gBAAiB","file":"component---site-components-radio-buttons-mdx-ba9204c78e21ddda0fe7.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/design-system/design-system/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { RadioGroup, Radio } from \"@wwnds/react\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"radio-buttons\"\n    }}>{`Radio Buttons`}</h1>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Radio buttons allow a user to select one Radio from a list.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"anatomy\"\n    }}>{`Anatomy`}</h2>\n    <p>{`A group of radio buttons includes:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`A Group Label`}</li>\n      <li parentName=\"ol\">{`Two or more Radio Button Controls and their Labels`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'<RadioGroup label=\\\"Select your native fruit\\\">\\n  <Radio>Apple</Radio>\\n  <Radio>Cherry</Radio>\\n  <Radio>Orange</Radio>\\n  <Radio>Peach</Radio>\\n  <Radio>Pear</Radio>\\n</RadioGroup>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      RadioGroup,\n      Radio,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t<RadioGroup label=\"Select your native fruit\" mdxType=\"RadioGroup\">\n\t\t<Radio mdxType=\"Radio\">Apple</Radio>\n\t\t<Radio mdxType=\"Radio\">Cherry</Radio>\n\t\t<Radio mdxType=\"Radio\">Orange</Radio>\n\t\t<Radio mdxType=\"Radio\">Peach</Radio>\n\t\t<Radio mdxType=\"Radio\">Pear</Radio>\n\t</RadioGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use radio buttons to allow a user to select exactly one Radio from a set of options, and display all available options.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Radio buttons should have between 2-5 options.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`If you have more than 5 options, use a `}<a parentName=\"li\" {...{\n              \"href\": \"dropdown\"\n            }}>{`dropdown`}</a>{` or `}<a parentName=\"li\" {...{\n              \"href\": \"combo-box\"\n            }}>{`combo box`}</a>{`.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The options in a group of radio buttons must be mutually exclusive. The user can only select 1 Radio.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Only use radio buttons when the field is required. If all radio buttons are in an unselected state on load, a user must select one of the radio buttons before proceeding.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`Accessibility`}</inlineCode>{` Arrow keys move focus within the group, uncheck the previously focused button, and check the newly focused button.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`Accessibility`}</inlineCode>{` `}<kbd>{`Space`}</kbd>{` selects the focused radio button if it is not already selected.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Do allow users to select an Radio by clicking the radio button or its text label.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Do position the radio button to the left of its label.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Do display options in a vertical layout, by default, for easier scanning.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Consider the most logical order to display options, such as alphabetical, chronological or by popularity.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Don’t use radio buttons if a user could select multiple options. Use `}<a parentName=\"p\" {...{\n            \"href\": \"checkbox\"\n          }}>{`checkboxes`}</a>{` instead.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Don't use radio buttons if a user could select NO Radio. Use `}<a parentName=\"p\" {...{\n            \"href\": \"checkbox\"\n          }}>{`checkboxes`}</a>{` instead.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Don’t use radio buttons if an action will take immediate effect when the user selects or deselects it.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Use a `}<a parentName=\"li\" {...{\n              \"href\": \"switch\"\n            }}>{`switch`}</a>{` if there are two opposite options (example: YES/NO, ON/OFF).`}</li>\n          <li parentName=\"ul\">{`Otherwise, use a group of regular `}<a parentName=\"li\" {...{\n              \"href\": \"button\"\n            }}>{`buttons`}</a>{`.`}</li>\n        </ul>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}