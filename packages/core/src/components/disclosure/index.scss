@use '../../motion';
@use '../../spacing';
@use '../../util';
@use '../../properties' as *;

$-expand: motion.scale(prop('duration-expand')) prop('easing-standard');
$-collapse: motion.scale(prop('duration-collapse')) prop('easing-standard');
$-border: prop('border-width') solid prop('base-40');

@mixin base {
	@include set-props(
		$border-width: spacing.px(0),
		$border-radius: prop('radius-base'),
		$padding-y: spacing.rem(0.75),
		$padding-x: spacing.rem(1.5),
		$marker-margin: spacing.rem(0.25),
	);

	position: relative;
	display: block;
}

@mixin summary {
	position: relative;
	display: flex;
	padding: util.padding(prop('padding-y'), prop('border-width')) 0;
	cursor: pointer;
	align-items: center;
}

@mixin contents-outer {
	overflow-y: hidden;
	transition: height $-expand;

	[open] & {
		box-sizing: content-box;
		transition: height $-collapse;
	}
}

@mixin contents-inner {
	padding-left:
		util.padding(
			calc(#{prop('padding-x')} + #{prop('marker-margin')}),
			prop('border-width'),
		);

	:last-child {
		margin-bottom: 0;
	}
}

@mixin marker-svg {
	margin-right: prop('marker-margin');
	margin-left: prop('marker-margin');

	details:not(.closed) & {
		transition: transform $-collapse;
		transform-origin: center;
	}
}

@mixin marker-transform($open-transform, $close-transform) {
	[open] & {
		transition: transform $-collapse;
		transform: $open-transform;
	}

	[open].closing & {
		transition: transform $-expand;
		transform: $close-transform;
	}
}

@mixin panel {
	@include set-props(
		$border-width: 1px,
		$padding-y: spacing.rem(1),
		$padding-x: spacing.rem(1),
	);

	border-radius: prop('border-radius');

	.#{util.prefix('disclosure__summary')} {
		padding:
			util.padding(prop('padding-y'), prop('border-width'))
			util.padding(prop('padding-x'), prop('border-width'));
		background-color: prop('base-20');
		border: $-border;
		border-radius: inherit;
		justify-content: space-between;
	}

	&[open] > .#{util.prefix('disclosure__summary')} {
		border-bottom: $-border;
		border-bottom-right-radius: 0;
		border-bottom-left-radius: 0;
	}

	.#{util.prefix('disclosure__contents-outer')} {
		border-right: $-border;
		border-bottom: $-border;
		border-left: $-border;
		border-bottom-right-radius: inherit;
		border-bottom-left-radius: inherit;
	}

	.#{util.prefix('disclosure__contents-inner')} {
		padding-top: prop('padding-y');
		padding-bottom: util.padding(spacing.rem(1.5), prop('border-width'));
	}
}

@mixin style {
	@include util.declare('disclosure') {
		// disable the user agent's marker (triangle/caret)
		summary::-moz-details-marker,
		summary::-ms-details-marker,
		summary::-o-details-marker {
			display: none;
		}

		summary::-webkit-details-marker {
			display: none;
		}

		summary::marker {
			display: none;
			content: '';
		}

		.#{util.prefix('disclosure')} {
			@include base;
		}

		.#{util.prefix('disclosure__summary')} {
			@include summary;
		}

		.#{util.prefix('disclosure__marker')} {
			@include marker-svg;
		}

		.#{util.prefix('disclosure__marker.icon--caret-right')} {
			@include marker-transform(
				rotate(90deg),
				rotate(0),
			);
		}

		.#{util.prefix('disclosure__contents-outer')} {
			@include contents-outer;
		}

		.#{util.prefix('disclosure__contents-inner')} {
			@include contents-inner;
		}

		.#{util.prefix('disclosure--panel')} {
			@include panel;
		}

		.#{util.prefix('disclosure__marker.icon--chevron-down')} {
			@include marker-transform(
				rotate3d(1, 0, 0, 180deg),
				rotate3d(1, 0, 0, 0),
			);
		}
	}
}
