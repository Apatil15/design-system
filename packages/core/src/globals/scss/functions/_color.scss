////
/// @group color
////

/// Increment a color by a specified number of steps.
/// @param {Map} $color-map - Any color map conforming to the color system.
/// @param {Number} $current-step [60] - The current color step.
/// @param {Number} $amount [1] - The number of steps to increment.
/// @return {String} The incremented color value.
@function increment-color($color-map, $current-step: 60, $amount: 1) {
	$val: $current-step + ($amount * 10);
	$key: if($amount > 0, min($val, 100), max($val, 10));

	@return map-get($color-map, $key);
}

/// Decrement a color by a specified number of steps.
/// @param {Map} $color-map - Any color map conforming to the color system.
/// @param {Number} $current-step [60] - The current color step.
/// @param {Number} $amount [1] - The number of steps to decrement.
/// @return {String} The decremented color value.
@function decrement-color($color-map, $current-step: 60, $amount: 1) {
	@return increment-color($color-map, $current-step, -#{$amount});
}

/// Get the color that should be used on hover.
/// @param {Map} $color-map - Any color map conforming to the color system.
/// @param {Number} $current-step [60] - The current color step.
/// @return {String} A color that is one step away from the current color.
@function hover-color($color-map, $current-step: 60) {
	@return increment-color($color-map, $current-step);
}

/// Get the color that should be used on hover.
/// @param {Map} $color-map - Any color map conforming to the color system.
/// @param {Number} $current-step [60] - The current color step.
/// @return {String} A color that is two steps away from the current color.
@function active-color($color-map, $current-step: 60) {
	@return increment-color($color-map, $current-step, 2);
}
