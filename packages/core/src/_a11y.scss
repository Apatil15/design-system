////
/// @group Accessibility
////

@use 'sass:list';
@use 'motion';
@use 'util';
@use 'properties' as props;

// TOKENS

$focus-ring-inner: props.prop('body-bg') !default;
/// The default focus shadow has a 2px outer ring and an inner ring that matches
/// the body's background color by default, giving the illusion of transparency.
$focus-shadow: (
	0 0 0 1px props.prop('focus-ring-inner'),
	0 0 0 3px props.prop('focus-ring'),
) !default;
/// A collapsed focus shadow that is meant to be used the focused element
/// conveys focus through some other mechanism, such as an `<input>`'s caret.
$focus-shadow-collapse: 0 0 0 1px props.prop('focus-ring') !default;

// MIXINS

/// Disable animations and transitions when either children of `.reduced-motion`
/// or the user has specified that they prefer reduced motion on their OS.
@mixin reduce-motion {
	@media screen and (prefers-reduced-motion: reduce) {
		transition: none !important;
		animation: none !important;
	}

	.#{util.prefix(reduced-motion)} & {
		transition: none !important;
		animation: none !important;
	}
}

/// Screen reader only - ensure that the element is only visible to screen readers.
/// @link https://github.com/twbs/bootstrap/blob/master/scss/mixins/_screen-reader.scss
@mixin sr-only {
	position: absolute !important;
	width: 1px !important;
	height: 1px !important;
	padding: 0 !important;
	margin: -1px !important;
	overflow: hidden !important;
	clip: rect(0, 0, 0, 0) !important;
	white-space: nowrap !important;
	border: 0 !important;
}

@mixin -focus($shadow, $current-shadows...) {
	z-index: props.prop('zindex-focus');
	outline: none;
	box-shadow: $current-shadows, $shadow;
	transition: motion.transition(('box-shadow' 'border-radius'));

	&:not(:focus-visible) {
		@if list.length($current-shadows) > 0 {
			box-shadow: $current-shadows;
		}
		@else {
			box-shadow: unset;
		}
	}
}

/// A box shadow focus indicator.
/// @param {List[]} $current-shadows... - Zero or more additional shadows to be applied in addition to the focus indicator.
@mixin focus-ring($current-shadows...) {
	@include -focus(props.prop('focus-shadow'), $current-shadows...);
}

@mixin focus-ring-collapse($current-shadows...) {
	@include -focus(props.prop('focus-shadow-collapse'), $current-shadows...);

	border-color: props.prop('focus-ring-color');
}
