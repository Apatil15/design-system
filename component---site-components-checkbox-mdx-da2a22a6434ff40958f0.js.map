{"version":3,"sources":["webpack:///./site/components/checkbox.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Checkbox","description","indeterminate","isMDXComponent"],"mappings":"2RAQO,MAAMA,EAAe,Q,8MAE5B,MAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,YADR,YAGA,8BACE,iBAAGC,WAAW,cAAd,+IAEF,iBAAQ,CACN,GAAM,WADR,WAGA,oDACA,sBACE,kBAAIA,WAAW,MAAf,sBACA,kBAAIA,WAAW,MAAf,YAEF,wDACA,sBACE,kBAAIA,WAAW,MAAf,mDAEF,gEACA,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,kBAEF,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,gGAAmGC,QAAS,CAC7IL,QACAH,kBACAS,eACAC,oBACAV,kBACAH,gBACCO,QAAQ,cACd,YAAC,WAAD,CAAUO,YAAY,8CAA8CP,QAAQ,YAA5E,aAEG,4BAAW,0BAAYC,WAAW,KAAvB,iBAAX,6BAAkG,6BAAGA,WAAW,KAAQ,CACpH,KAAQ,4GADsF,uBAAlG,KAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,0IAA6IC,QAAS,CACvLL,QACAH,kBACAS,eACAC,oBACAV,kBACAH,gBACCO,QAAQ,cACd,YAAC,WAAD,CAAUO,YAAY,6DAA6DC,eAAa,EAACR,QAAQ,YAAzG,kBAIG,iBAAQ,CACN,GAAM,SADR,SAGA,sBACE,kBAAIC,WAAW,MACb,iBAAGA,WAAW,MAAd,mFAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,iBAAnB,IAAiF,gCAAjF,wCAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,sIAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,oGAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,2GAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,8EAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,uDAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,wDAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,iEAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,iBAAnB,+GAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gHAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,iKAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,qKAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,0KAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,0KAGJ,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,uBADR,uBAGA,sBACE,kBAAIA,WAAW,MAAf,+CACA,kBAAIA,WAAW,MAAf,+FAEF,iBAAQ,CACN,GAAM,sBADR,sBAGA,sBACE,kBAAIA,WAAW,MAAf,4GACA,kBAAIA,WAAW,MAAf,4LAAiN,kBAAIA,WAAW,MAC5N,kBAAIA,WAAW,MAAf,wFACA,kBAAIA,WAAW,MAAf,0HACA,kBAAIA,WAAW,MAAf,oGACA,kBAAIA,WAAW,MAAf,yFACA,kBAAIA,WAAW,MAAf,sG,4MAOVJ,EAAWY,gBAAiB","file":"component---site-components-checkbox-mdx-da2a22a6434ff40958f0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/design-system/design-system/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { Checkbox } from \"@wwnds/react\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h1>\n    <blockquote>\n      <p parentName=\"blockquote\">{`A checkbox allows a user to select or deselect an option. A group of checkboxes allows a user to select any number of options from a list.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"anatomy\"\n    }}>{`Anatomy`}</h2>\n    <p>{`A single checkbox includes:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`A Checkbox Control`}</li>\n      <li parentName=\"ol\">{`A Label`}</li>\n    </ol>\n    <p>{`A group of checkboxes includes:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Two or more Checkbox Controls and their Labels`}</li>\n    </ol>\n    <p>{`A group of checkboxes may also include:`}</p>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`A Group Label`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'<Checkbox description=\\\"Additional information about this checkbox.\\\">\\n  Checkbox\\n</Checkbox>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Checkbox,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t<Checkbox description=\"Additional information about this checkbox.\" mdxType=\"Checkbox\">Checkbox</Checkbox>\n    </Playground>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`indeterminate`}</inlineCode>{` to set a checkbox in its `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes\"\n      }}>{`indeterminate state`}</a>{`.`}</p>\n    <Playground __position={1} __code={'<Checkbox\\n  description=\\\"This checkbox starts out in the indeterminate/mixed state.\\\"\\n  indeterminate\\n>\\n  Indeterminate\\n</Checkbox>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Checkbox,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t<Checkbox description=\"This checkbox starts out in the indeterminate/mixed state.\" indeterminate mdxType=\"Checkbox\">\n\t\tIndeterminate\n\t</Checkbox>\n    </Playground>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`A single checkbox has two mutually exclusive states: selected or not selected.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`Accessibility`}</inlineCode>{` `}<kbd>{`Space`}</kbd>{` changes the state of the checkbox.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use a group of checkboxes to allow a user to select zero, one or multiple options from a list, and display all available options.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Checkboxes may allow users to sub-select options from a nested list (see tri-state checkboxes).`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Checkboxes work independently of other checkboxes, unless they are controlled by a tri-state checkbox.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Do allow users to select an option by clicking the checkbox or its label.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Do position the checkbox to the left of its label.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Do separate groups of checkboxes with group labels.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Do display options in a vertical layout for easier scanning.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`Accessibility`}</inlineCode>{` Do define a label for the checkbox, even if it is not visible (example: when selecting a row in a table).`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Don’t use checkboxes if only one item can be selected from a list. Use radio buttons or a dropdown instead.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Don’t use a checkbox if an action will take immediate effect when the user selects or deselects it. Add a Submit button to confirm, or use a toggle instead.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Don’t use negative statements for a checkbox, because taking action to select it is confusing and counter-intuitive. (example: “I don’t want to receive email…”)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Avoid setting default options, because pre-selecting an option makes it more likely that users will not make a conscious choice and submit an option unintentionally.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Consider the most logical order to list options. Options may be listed alphabetically, by popularity, or some other ordered system that should be clear to the user.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"types\"\n    }}>{`Types`}</h2>\n    <h3 {...{\n      \"id\": \"dual-state-checkbox\"\n    }}>{`Dual-state Checkbox`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`A single checkbox is a dual-state checkbox.`}</li>\n      <li parentName=\"ul\">{`A dual-state checkbox allows a user to switch between two states: checked and not checked.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"tri-state-checkbox\"\n    }}>{`Tri-state Checkbox`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`A tri-state checkbox supports three states: checked, not checked, and indeterminate (partially checked).`}</li>\n      <li parentName=\"ul\">{`A tri-state checkbox is used to represent and control the state of a group of options. Each option in the group can also be individually checked or unchecked with a dual state checkbox.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`If all options in the group are checked, the tri-state checkbox displays as checked.`}</li>\n          <li parentName=\"ul\">{`If some of the options in the group are checked, the tri-state checkbox displays as indeterminate (partially checked).`}</li>\n          <li parentName=\"ul\">{`If none of the options in the group are checked, the tri-state checkbox displays as not checked.`}</li>\n          <li parentName=\"ul\">{`If a user checks a tri-state checkbox, then all the options in the group are checked.`}</li>\n          <li parentName=\"ul\">{`If a user unchecks a tri-state checkbox, then all the options in the group are unchecked.`}</li>\n        </ul></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}