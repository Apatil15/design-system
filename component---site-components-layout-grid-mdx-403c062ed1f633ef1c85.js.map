{"version":3,"sources":["webpack:///./site/components/layout-grid.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"kQAMO,MAAMA,EAAe,Q,iNAE5B,MAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,eADR,eAGA,8BACE,iBAAGC,WAAW,cAAd,sFAEF,iBAAQ,CACN,GAAM,WADR,WAGA,gDACA,sBACE,kBAAIA,WAAW,MAAf,WACA,kBAAIA,WAAW,MAAf,WACA,kBAAIA,WAAW,MAAf,WACA,kBAAIA,WAAW,MAAf,sBAEF,iBAAQ,CACN,GAAM,SADR,SAGA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,mHAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,uGAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,wIAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,sIAGF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,sJAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,2GAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,4EAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,2DAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,6GAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,yEAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,2DAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,iBAAnB,sFAGJ,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIA,WAAW,MAAf,8FACA,kBAAIA,WAAW,MAAf,qEACA,kBAAIA,WAAW,MAAf,qEAEF,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIA,WAAW,MAAf,iHACA,kBAAIA,WAAW,MAAf,0HACA,kBAAIA,WAAW,MAAf,qE,+MAMNJ,EAAWK,gBAAiB","file":"component---site-components-layout-grid-mdx-403c062ed1f633ef1c85.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/design-system/design-system/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"layout-grid\"\n    }}>{`Layout Grid`}</h1>\n    <blockquote>\n      <p parentName=\"blockquote\">{`The Layout Grid allows us to create responsive page layouts at every screen size.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"anatomy\"\n    }}>{`Anatomy`}</h2>\n    <p>{`A Layout Grid includes:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Columns`}</li>\n      <li parentName=\"ol\">{`Gutters`}</li>\n      <li parentName=\"ol\">{`Margins`}</li>\n      <li parentName=\"ol\">{`Breakpoint Ranges`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Columns set the widths of page regions and align content to consistent guides. All columns are of equal width.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Gutters are the spaces between columns that help separate content. All gutters are of equal width.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Margins are the spaces between the content and the left/right edges of the screen. Left and right margins should be the same width.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Margins can be adjusted to ensure appropriate line length at each breakpoint range.\nGutters and margins can be different widths.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`A Breakpoint Range is a range of screen sizes that have the same layout. At each breakpoint, the layout may adjust to better fit the screen size.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The number of columns and the width of the margins and gutters is determined by each breakpoint range.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Do align major content areas or regions of the page to the layout grid.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Do design layouts for the smallest screen sizes first.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Do set a maximum width for the layout grid or content areas within the grid, to avoid long line lengths.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Don’t set margins so large that there isn’t enough room for content.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Don’t include fixed-width sidebars in the layout grid.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`Accessibility`}</inlineCode>{` Don’t visually reorder columns independently from their position in the markup.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"types\"\n    }}>{`Types`}</h2>\n    <h3 {...{\n      \"id\": \"fluid-grid\"\n    }}>{`Fluid Grid`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`By default, use a fluid grid so that content areas flexibly scale to fit any screen width.`}</li>\n      <li parentName=\"ul\">{`Column widths are set as percentages of the overall screen width.`}</li>\n      <li parentName=\"ul\">{`Margins and gutters have a fixed width at each breakpoint range.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"fixed-grid\"\n    }}>{`Fixed Grid`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Use a fixed grid if it is important for the width of the content area to be static within a breakpoint range.`}</li>\n      <li parentName=\"ul\">{`Gutters and column widths have a fixed width at each breakpoint range, so the content only changes at each breakpoint.`}</li>\n      <li parentName=\"ul\">{`Margins scale fluidly as the overall screen width changes.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}