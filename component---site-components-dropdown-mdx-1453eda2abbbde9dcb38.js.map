{"version":3,"sources":["webpack:///./site/components/dropdown.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Dropdown","label","sort","Option","isMDXComponent"],"mappings":"0RAQO,MAAMA,EAAe,Q,8MAE5B,MAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,YADR,YAGA,8BACE,iBAAGC,WAAW,cAAd,+FAEF,iBAAQ,CACN,GAAM,WADR,WAGA,6CACA,sBACE,kBAAIA,WAAW,MAAf,gBACA,kBAAIA,WAAW,MAAf,iCACA,kBAAIA,WAAW,MAAf,qBACA,kBAAIA,WAAW,MAAf,iBAAsC,0BAAYA,WAAW,MAAvB,YAAtC,MAEF,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,kfAAufC,QAAS,CACjiBL,QACAH,kBACAS,eACAC,oBACAV,kBACAH,gBACCO,QAAQ,cACd,YAAC,WAAD,CAAUO,MAAM,kBAAkBC,KAAK,YAAYR,QAAQ,YAC1D,YAAC,WAASS,OAAV,mBACA,YAAC,WAASA,OAAV,kBACA,YAAC,WAASA,OAAV,gBACA,YAAC,WAASA,OAAV,6BACA,YAAC,WAASA,OAAV,8BACA,YAAC,WAASA,OAAV,sBACA,YAAC,WAASA,OAAV,4BACA,YAAC,WAASA,OAAV,+BAGE,iBAAQ,CACN,GAAM,SADR,SAGA,sBACE,kBAAIR,WAAW,MACb,iBAAGA,WAAW,MAAd,mFAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,4FAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,0GAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,wDAA4E,0BAAYA,WAAW,KAAvB,YAA5E,kDAAmL,0BAAYA,WAAW,KAAvB,YAAnL,mBAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,iBAAnB,IAAiF,qCAAjF,IAA+G,mCAA/G,gGAAuO,+BAAvO,QAAmQ,8BAAnQ,0DAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,0CACA,kBAAIA,WAAW,MACb,kBAAIA,WAAW,MAAf,mJAGJ,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,6FAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,kIAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gFAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,sDAA0E,6BAAGA,WAAW,KAAQ,CAC5F,KAAQ,cAD8D,aAA1E,cAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,0CAA8D,6BAAGA,WAAW,KAAQ,CAChF,KAAQ,kBADkD,iBAA9D,OAEkC,6BAAGA,WAAW,KAAQ,CACpD,KAAQ,WADsB,UAFlC,aAKA,kBAAIA,WAAW,MACb,kBAAIA,WAAW,MAAf,oGAGJ,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,0FAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,4GAAgI,6BAAGA,WAAW,KAAQ,CAClJ,KAAQ,eADoH,cAAhI,qD,4MASRJ,EAAWa,gBAAiB","file":"component---site-components-dropdown-mdx-1453eda2abbbde9dcb38.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/design-system/design-system/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { Dropdown } from \"@wwnds/react\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"dropdown\"\n    }}>{`Dropdown`}</h1>\n    <blockquote>\n      <p parentName=\"blockquote\">{`A dropdown allows a user to select one option from a list, and collapse the other options.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"anatomy\"\n    }}>{`Anatomy`}</h2>\n    <p>{`A dropdown includes:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`A Text Label`}</li>\n      <li parentName=\"ol\">{`A Selected Option Area + Icon`}</li>\n      <li parentName=\"ol\">{`A List of Options`}</li>\n      <li parentName=\"ol\">{`Default Text (`}<inlineCode parentName=\"li\">{`\"Select\"`}</inlineCode>{`)`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'<Dropdown label=\\\"Choose a sitcom\\\" sort=\\\"ascending\\\">\\n  <Dropdown.Option>The Office</Dropdown.Option>\\n  <Dropdown.Option>Community</Dropdown.Option>\\n  <Dropdown.Option>Friends</Dropdown.Option>\\n  <Dropdown.Option>Parks and Recreation</Dropdown.Option>\\n  <Dropdown.Option>How I Met Your Mother</Dropdown.Option>\\n  <Dropdown.Option>Modern Family</Dropdown.Option>\\n  <Dropdown.Option>The Big Bang Theory</Dropdown.Option>\\n  <Dropdown.Option>Arrested Development</Dropdown.Option>\\n</Dropdown>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Dropdown,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t<Dropdown label=\"Choose a sitcom\" sort=\"ascending\" mdxType=\"Dropdown\">\n\t\t<Dropdown.Option>The Office</Dropdown.Option>\n\t\t<Dropdown.Option>Community</Dropdown.Option>\n\t\t<Dropdown.Option>Friends</Dropdown.Option>\n\t\t<Dropdown.Option>Parks and Recreation</Dropdown.Option>\n\t\t<Dropdown.Option>How I Met Your Mother</Dropdown.Option>\n\t\t<Dropdown.Option>Modern Family</Dropdown.Option>\n\t\t<Dropdown.Option>The Big Bang Theory</Dropdown.Option>\n\t\t<Dropdown.Option>Arrested Development</Dropdown.Option>\n\t</Dropdown>\n    </Playground>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use a dropdown to select one option from a collapsed set of available options.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`By default, dropdown options are mutually exclusive. The user can only select 1 option.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`When an option is selected, the dropdown closes and the selected option updates to display that item.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`On load, the dropdown should display default text of `}<inlineCode parentName=\"p\">{`\"Select\"`}</inlineCode>{`. The user should be able to change it back to `}<inlineCode parentName=\"p\">{`\"Select\"`}</inlineCode>{` if they wish.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`Accessibility`}</inlineCode>{` `}<kbd>{`Down Arrow`}</kbd>{`/`}<kbd>{`Up Arrow`}</kbd>{` moves focus to the next/previous options, respectively. Selection may also move with focus. `}<kbd>{`Home`}</kbd>{` and `}<kbd>{`End`}</kbd>{` moves focus to the first/last options, respectively.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Do keep dropdown options very concise.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`If long options are unavoidable, then they can truncate when the dropdown is in a closed state, but they should wrap fully in the open state.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Do ensure that the clickable area includes the entire selected option area and the icon.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Consider the most logical order to list options. Options could be listed alphabetically, chronologically, by popularity, etc.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Do not start all of the options in a dropdown with the same word or phrase.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`If there are more than 6 options, consider using a `}<a parentName=\"p\" {...{\n            \"href\": \"combo-box\"\n          }}>{`combo box`}</a>{` instead.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`If there are 2 options, consider using `}<a parentName=\"p\" {...{\n            \"href\": \"radio-buttons\"\n          }}>{`radio buttons`}</a>{` or `}<a parentName=\"p\" {...{\n            \"href\": \"switch\"\n          }}>{`switch`}</a>{` instead.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`If your interface needs to contain many of these selections, use dropdowns over radio buttons.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Do not use a dropdown when the user can multi-select options. Use checkboxes instead.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`If it is not absolutely necessary for a user to choose from a predefined set of options, then consider a `}<a parentName=\"p\" {...{\n            \"href\": \"text-field\"\n          }}>{`text field`}</a>{` for users to type their own information.`}</p>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}