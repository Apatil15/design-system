(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"4+Fu":function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return s})),a.d(t,"default",(function(){return h}));var o=a("wx14"),c=a("Ff2n"),n=(a("mXGw"),a("7ljp")),i=a("hhGP"),b=a("52AM"),l=a("KOfY");a("qKvR");const s={};void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"site/components/checkbox.mdx"}});const r={_frontmatter:s},p=i.a;function h(e){let{components:t}=e,a=Object(c.a)(e,["components"]);return Object(n.b)(p,Object(o.a)({},r,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"checkbox"},"Checkbox"),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"A checkbox allows a user to select or deselect an option. A group of checkboxes allows a user to select any number of options from a list.")),Object(n.b)("h2",{id:"anatomy"},"Anatomy"),Object(n.b)("p",null,"A single checkbox includes:"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"A Checkbox Control"),Object(n.b)("li",{parentName:"ol"},"A Label")),Object(n.b)("p",null,"A group of checkboxes includes:"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Two or more Checkbox Controls and their Labels")),Object(n.b)("p",null,"A group of checkboxes may also include:"),Object(n.b)("ol",{start:2},Object(n.b)("li",{parentName:"ol"},"A Group Label")),Object(n.b)("h2",{id:"examples"},"Examples"),Object(n.b)(b.b,{__position:0,__code:'<Checkbox description="Additional information about this checkbox.">\n  Checkbox\n</Checkbox>',__scope:{props:a,DefaultLayout:i.a,Playground:b.b,Checkbox:l.Checkbox,DefaultLayout:i.a,_frontmatter:s},mdxType:"Playground"},Object(n.b)(l.Checkbox,{description:"Additional information about this checkbox.",mdxType:"Checkbox"},"Checkbox")),Object(n.b)("p",null,"Use ",Object(n.b)("inlineCode",{parentName:"p"},"indeterminate")," to set a checkbox in its ",Object(n.b)("a",Object(o.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes"}),"indeterminate state"),"."),Object(n.b)(b.b,{__position:1,__code:'<Checkbox\n  description="This checkbox starts out in the indeterminate/mixed state."\n  indeterminate\n>\n  Indeterminate\n</Checkbox>',__scope:{props:a,DefaultLayout:i.a,Playground:b.b,Checkbox:l.Checkbox,DefaultLayout:i.a,_frontmatter:s},mdxType:"Playground"},Object(n.b)(l.Checkbox,{description:"This checkbox starts out in the indeterminate/mixed state.",indeterminate:!0,mdxType:"Checkbox"},"Indeterminate")),Object(n.b)("h2",{id:"usage"},"Usage"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"A single checkbox has two mutually exclusive states: selected or not selected.")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"Accessibility")," ",Object(n.b)("kbd",null,"Space")," changes the state of the checkbox.")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Use a group of checkboxes to allow a user to select zero, one or multiple options from a list, and display all available options.")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Checkboxes may allow users to sub-select options from a nested list (see tri-state checkboxes).")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Checkboxes work independently of other checkboxes, unless they are controlled by a tri-state checkbox.")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Do allow users to select an option by clicking the checkbox or its label.")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Do position the checkbox to the left of its label.")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Do separate groups of checkboxes with group labels.")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Do display options in a vertical layout for easier scanning.")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"Accessibility")," Do define a label for the checkbox, even if it is not visible (example: when selecting a row in a table).")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Don’t use checkboxes if only one item can be selected from a list. Use radio buttons or a dropdown instead.")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Don’t use a checkbox if an action will take immediate effect when the user selects or deselects it. Add a Submit button to confirm, or use a toggle instead.")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Don’t use negative statements for a checkbox, because taking action to select it is confusing and counter-intuitive. (example: “I don’t want to receive email…”)")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Avoid setting default options, because pre-selecting an option makes it more likely that users will not make a conscious choice and submit an option unintentionally.")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Consider the most logical order to list options. Options may be listed alphabetically, by popularity, or some other ordered system that should be clear to the user."))),Object(n.b)("h2",{id:"types"},"Types"),Object(n.b)("h3",{id:"dual-state-checkbox"},"Dual-state Checkbox"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"A single checkbox is a dual-state checkbox."),Object(n.b)("li",{parentName:"ul"},"A dual-state checkbox allows a user to switch between two states: checked and not checked.")),Object(n.b)("h3",{id:"tri-state-checkbox"},"Tri-state Checkbox"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"A tri-state checkbox supports three states: checked, not checked, and indeterminate (partially checked)."),Object(n.b)("li",{parentName:"ul"},"A tri-state checkbox is used to represent and control the state of a group of options. Each option in the group can also be individually checked or unchecked with a dual state checkbox.",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"If all options in the group are checked, the tri-state checkbox displays as checked."),Object(n.b)("li",{parentName:"ul"},"If some of the options in the group are checked, the tri-state checkbox displays as indeterminate (partially checked)."),Object(n.b)("li",{parentName:"ul"},"If none of the options in the group are checked, the tri-state checkbox displays as not checked."),Object(n.b)("li",{parentName:"ul"},"If a user checks a tri-state checkbox, then all the options in the group are checked."),Object(n.b)("li",{parentName:"ul"},"If a user unchecks a tri-state checkbox, then all the options in the group are unchecked.")))))}void 0!==h&&h&&h===Object(h)&&Object.isExtensible(h)&&!h.hasOwnProperty("__filemeta")&&Object.defineProperty(h,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"site/components/checkbox.mdx"}}),h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---site-components-checkbox-mdx-da2a22a6434ff40958f0.js.map